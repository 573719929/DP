/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.baicdata.stat;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ReportService {

  public interface Iface {

    public reportResult AdReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult GroupReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult PlanReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult AdAreaDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult GroupAreaDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult PlanAreaDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult AdDayDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult GroupDayDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult PlanDayDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult AdSourceDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult GroupSourceDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public reportResult PlanSourceDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException;

    public void ping(int ignoreme) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void AdReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.AdReportByGroupId_call> resultHandler) throws org.apache.thrift.TException;

    public void GroupReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.GroupReportByPlanId_call> resultHandler) throws org.apache.thrift.TException;

    public void PlanReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.PlanReportByUid_call> resultHandler) throws org.apache.thrift.TException;

    public void AdAreaDetailReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.AdAreaDetailReportByGroupId_call> resultHandler) throws org.apache.thrift.TException;

    public void GroupAreaDetailReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.GroupAreaDetailReportByPlanId_call> resultHandler) throws org.apache.thrift.TException;

    public void PlanAreaDetailReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.PlanAreaDetailReportByUid_call> resultHandler) throws org.apache.thrift.TException;

    public void AdDayDetailReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.AdDayDetailReportByGroupId_call> resultHandler) throws org.apache.thrift.TException;

    public void GroupDayDetailReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.GroupDayDetailReportByPlanId_call> resultHandler) throws org.apache.thrift.TException;

    public void PlanDayDetailReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.PlanDayDetailReportByUid_call> resultHandler) throws org.apache.thrift.TException;

    public void AdSourceDetailReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.AdSourceDetailReportByGroupId_call> resultHandler) throws org.apache.thrift.TException;

    public void GroupSourceDetailReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.GroupSourceDetailReportByPlanId_call> resultHandler) throws org.apache.thrift.TException;

    public void PlanSourceDetailReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.PlanSourceDetailReportByUid_call> resultHandler) throws org.apache.thrift.TException;

    public void ping(int ignoreme, org.apache.thrift.async.AsyncMethodCallback<AsyncClient.ping_call> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public reportResult AdReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_AdReportByGroupId(q, p);
      return recv_AdReportByGroupId();
    }

    public void send_AdReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      AdReportByGroupId_args args = new AdReportByGroupId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("AdReportByGroupId", args);
    }

    public reportResult recv_AdReportByGroupId() throws org.apache.thrift.TException
    {
      AdReportByGroupId_result result = new AdReportByGroupId_result();
      receiveBase(result, "AdReportByGroupId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "AdReportByGroupId failed: unknown result");
    }

    public reportResult GroupReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_GroupReportByPlanId(q, p);
      return recv_GroupReportByPlanId();
    }

    public void send_GroupReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      GroupReportByPlanId_args args = new GroupReportByPlanId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("GroupReportByPlanId", args);
    }

    public reportResult recv_GroupReportByPlanId() throws org.apache.thrift.TException
    {
      GroupReportByPlanId_result result = new GroupReportByPlanId_result();
      receiveBase(result, "GroupReportByPlanId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GroupReportByPlanId failed: unknown result");
    }

    public reportResult PlanReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_PlanReportByUid(q, p);
      return recv_PlanReportByUid();
    }

    public void send_PlanReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      PlanReportByUid_args args = new PlanReportByUid_args();
      args.setQ(q);
      args.setP(p);
      sendBase("PlanReportByUid", args);
    }

    public reportResult recv_PlanReportByUid() throws org.apache.thrift.TException
    {
      PlanReportByUid_result result = new PlanReportByUid_result();
      receiveBase(result, "PlanReportByUid");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "PlanReportByUid failed: unknown result");
    }

    public reportResult AdAreaDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_AdAreaDetailReportByGroupId(q, p);
      return recv_AdAreaDetailReportByGroupId();
    }

    public void send_AdAreaDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      AdAreaDetailReportByGroupId_args args = new AdAreaDetailReportByGroupId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("AdAreaDetailReportByGroupId", args);
    }

    public reportResult recv_AdAreaDetailReportByGroupId() throws org.apache.thrift.TException
    {
      AdAreaDetailReportByGroupId_result result = new AdAreaDetailReportByGroupId_result();
      receiveBase(result, "AdAreaDetailReportByGroupId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "AdAreaDetailReportByGroupId failed: unknown result");
    }

    public reportResult GroupAreaDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_GroupAreaDetailReportByPlanId(q, p);
      return recv_GroupAreaDetailReportByPlanId();
    }

    public void send_GroupAreaDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      GroupAreaDetailReportByPlanId_args args = new GroupAreaDetailReportByPlanId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("GroupAreaDetailReportByPlanId", args);
    }

    public reportResult recv_GroupAreaDetailReportByPlanId() throws org.apache.thrift.TException
    {
      GroupAreaDetailReportByPlanId_result result = new GroupAreaDetailReportByPlanId_result();
      receiveBase(result, "GroupAreaDetailReportByPlanId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GroupAreaDetailReportByPlanId failed: unknown result");
    }

    public reportResult PlanAreaDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_PlanAreaDetailReportByUid(q, p);
      return recv_PlanAreaDetailReportByUid();
    }

    public void send_PlanAreaDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      PlanAreaDetailReportByUid_args args = new PlanAreaDetailReportByUid_args();
      args.setQ(q);
      args.setP(p);
      sendBase("PlanAreaDetailReportByUid", args);
    }

    public reportResult recv_PlanAreaDetailReportByUid() throws org.apache.thrift.TException
    {
      PlanAreaDetailReportByUid_result result = new PlanAreaDetailReportByUid_result();
      receiveBase(result, "PlanAreaDetailReportByUid");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "PlanAreaDetailReportByUid failed: unknown result");
    }

    public reportResult AdDayDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_AdDayDetailReportByGroupId(q, p);
      return recv_AdDayDetailReportByGroupId();
    }

    public void send_AdDayDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      AdDayDetailReportByGroupId_args args = new AdDayDetailReportByGroupId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("AdDayDetailReportByGroupId", args);
    }

    public reportResult recv_AdDayDetailReportByGroupId() throws org.apache.thrift.TException
    {
      AdDayDetailReportByGroupId_result result = new AdDayDetailReportByGroupId_result();
      receiveBase(result, "AdDayDetailReportByGroupId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "AdDayDetailReportByGroupId failed: unknown result");
    }

    public reportResult GroupDayDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_GroupDayDetailReportByPlanId(q, p);
      return recv_GroupDayDetailReportByPlanId();
    }

    public void send_GroupDayDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      GroupDayDetailReportByPlanId_args args = new GroupDayDetailReportByPlanId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("GroupDayDetailReportByPlanId", args);
    }

    public reportResult recv_GroupDayDetailReportByPlanId() throws org.apache.thrift.TException
    {
      GroupDayDetailReportByPlanId_result result = new GroupDayDetailReportByPlanId_result();
      receiveBase(result, "GroupDayDetailReportByPlanId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GroupDayDetailReportByPlanId failed: unknown result");
    }

    public reportResult PlanDayDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_PlanDayDetailReportByUid(q, p);
      return recv_PlanDayDetailReportByUid();
    }

    public void send_PlanDayDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      PlanDayDetailReportByUid_args args = new PlanDayDetailReportByUid_args();
      args.setQ(q);
      args.setP(p);
      sendBase("PlanDayDetailReportByUid", args);
    }

    public reportResult recv_PlanDayDetailReportByUid() throws org.apache.thrift.TException
    {
      PlanDayDetailReportByUid_result result = new PlanDayDetailReportByUid_result();
      receiveBase(result, "PlanDayDetailReportByUid");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "PlanDayDetailReportByUid failed: unknown result");
    }

    public reportResult AdSourceDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_AdSourceDetailReportByGroupId(q, p);
      return recv_AdSourceDetailReportByGroupId();
    }

    public void send_AdSourceDetailReportByGroupId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      AdSourceDetailReportByGroupId_args args = new AdSourceDetailReportByGroupId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("AdSourceDetailReportByGroupId", args);
    }

    public reportResult recv_AdSourceDetailReportByGroupId() throws org.apache.thrift.TException
    {
      AdSourceDetailReportByGroupId_result result = new AdSourceDetailReportByGroupId_result();
      receiveBase(result, "AdSourceDetailReportByGroupId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "AdSourceDetailReportByGroupId failed: unknown result");
    }

    public reportResult GroupSourceDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_GroupSourceDetailReportByPlanId(q, p);
      return recv_GroupSourceDetailReportByPlanId();
    }

    public void send_GroupSourceDetailReportByPlanId(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      GroupSourceDetailReportByPlanId_args args = new GroupSourceDetailReportByPlanId_args();
      args.setQ(q);
      args.setP(p);
      sendBase("GroupSourceDetailReportByPlanId", args);
    }

    public reportResult recv_GroupSourceDetailReportByPlanId() throws org.apache.thrift.TException
    {
      GroupSourceDetailReportByPlanId_result result = new GroupSourceDetailReportByPlanId_result();
      receiveBase(result, "GroupSourceDetailReportByPlanId");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GroupSourceDetailReportByPlanId failed: unknown result");
    }

    public reportResult PlanSourceDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      send_PlanSourceDetailReportByUid(q, p);
      return recv_PlanSourceDetailReportByUid();
    }

    public void send_PlanSourceDetailReportByUid(queryOptions q, pageOptions p) throws org.apache.thrift.TException
    {
      PlanSourceDetailReportByUid_args args = new PlanSourceDetailReportByUid_args();
      args.setQ(q);
      args.setP(p);
      sendBase("PlanSourceDetailReportByUid", args);
    }

    public reportResult recv_PlanSourceDetailReportByUid() throws org.apache.thrift.TException
    {
      PlanSourceDetailReportByUid_result result = new PlanSourceDetailReportByUid_result();
      receiveBase(result, "PlanSourceDetailReportByUid");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "PlanSourceDetailReportByUid failed: unknown result");
    }

    public void ping(int ignoreme) throws org.apache.thrift.TException
    {
      send_ping(ignoreme);
      recv_ping();
    }

    public void send_ping(int ignoreme) throws org.apache.thrift.TException
    {
      ping_args args = new ping_args();
      args.setIgnoreme(ignoreme);
      sendBase("ping", args);
    }

    public void recv_ping() throws org.apache.thrift.TException
    {
      ping_result result = new ping_result();
      receiveBase(result, "ping");
      return;
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void AdReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdReportByGroupId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      AdReportByGroupId_call method_call = new AdReportByGroupId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class AdReportByGroupId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public AdReportByGroupId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdReportByGroupId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("AdReportByGroupId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        AdReportByGroupId_args args = new AdReportByGroupId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_AdReportByGroupId();
      }
    }

    public void GroupReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupReportByPlanId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GroupReportByPlanId_call method_call = new GroupReportByPlanId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GroupReportByPlanId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public GroupReportByPlanId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupReportByPlanId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GroupReportByPlanId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GroupReportByPlanId_args args = new GroupReportByPlanId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GroupReportByPlanId();
      }
    }

    public void PlanReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanReportByUid_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      PlanReportByUid_call method_call = new PlanReportByUid_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class PlanReportByUid_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public PlanReportByUid_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanReportByUid_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("PlanReportByUid", org.apache.thrift.protocol.TMessageType.CALL, 0));
        PlanReportByUid_args args = new PlanReportByUid_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_PlanReportByUid();
      }
    }

    public void AdAreaDetailReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdAreaDetailReportByGroupId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      AdAreaDetailReportByGroupId_call method_call = new AdAreaDetailReportByGroupId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class AdAreaDetailReportByGroupId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public AdAreaDetailReportByGroupId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdAreaDetailReportByGroupId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("AdAreaDetailReportByGroupId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        AdAreaDetailReportByGroupId_args args = new AdAreaDetailReportByGroupId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_AdAreaDetailReportByGroupId();
      }
    }

    public void GroupAreaDetailReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupAreaDetailReportByPlanId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GroupAreaDetailReportByPlanId_call method_call = new GroupAreaDetailReportByPlanId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GroupAreaDetailReportByPlanId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public GroupAreaDetailReportByPlanId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupAreaDetailReportByPlanId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GroupAreaDetailReportByPlanId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GroupAreaDetailReportByPlanId_args args = new GroupAreaDetailReportByPlanId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GroupAreaDetailReportByPlanId();
      }
    }

    public void PlanAreaDetailReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanAreaDetailReportByUid_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      PlanAreaDetailReportByUid_call method_call = new PlanAreaDetailReportByUid_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class PlanAreaDetailReportByUid_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public PlanAreaDetailReportByUid_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanAreaDetailReportByUid_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("PlanAreaDetailReportByUid", org.apache.thrift.protocol.TMessageType.CALL, 0));
        PlanAreaDetailReportByUid_args args = new PlanAreaDetailReportByUid_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_PlanAreaDetailReportByUid();
      }
    }

    public void AdDayDetailReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdDayDetailReportByGroupId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      AdDayDetailReportByGroupId_call method_call = new AdDayDetailReportByGroupId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class AdDayDetailReportByGroupId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public AdDayDetailReportByGroupId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdDayDetailReportByGroupId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("AdDayDetailReportByGroupId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        AdDayDetailReportByGroupId_args args = new AdDayDetailReportByGroupId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_AdDayDetailReportByGroupId();
      }
    }

    public void GroupDayDetailReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupDayDetailReportByPlanId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GroupDayDetailReportByPlanId_call method_call = new GroupDayDetailReportByPlanId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GroupDayDetailReportByPlanId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public GroupDayDetailReportByPlanId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupDayDetailReportByPlanId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GroupDayDetailReportByPlanId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GroupDayDetailReportByPlanId_args args = new GroupDayDetailReportByPlanId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GroupDayDetailReportByPlanId();
      }
    }

    public void PlanDayDetailReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanDayDetailReportByUid_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      PlanDayDetailReportByUid_call method_call = new PlanDayDetailReportByUid_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class PlanDayDetailReportByUid_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public PlanDayDetailReportByUid_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanDayDetailReportByUid_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("PlanDayDetailReportByUid", org.apache.thrift.protocol.TMessageType.CALL, 0));
        PlanDayDetailReportByUid_args args = new PlanDayDetailReportByUid_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_PlanDayDetailReportByUid();
      }
    }

    public void AdSourceDetailReportByGroupId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdSourceDetailReportByGroupId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      AdSourceDetailReportByGroupId_call method_call = new AdSourceDetailReportByGroupId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class AdSourceDetailReportByGroupId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public AdSourceDetailReportByGroupId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<AdSourceDetailReportByGroupId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("AdSourceDetailReportByGroupId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        AdSourceDetailReportByGroupId_args args = new AdSourceDetailReportByGroupId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_AdSourceDetailReportByGroupId();
      }
    }

    public void GroupSourceDetailReportByPlanId(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupSourceDetailReportByPlanId_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GroupSourceDetailReportByPlanId_call method_call = new GroupSourceDetailReportByPlanId_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GroupSourceDetailReportByPlanId_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public GroupSourceDetailReportByPlanId_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<GroupSourceDetailReportByPlanId_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GroupSourceDetailReportByPlanId", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GroupSourceDetailReportByPlanId_args args = new GroupSourceDetailReportByPlanId_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GroupSourceDetailReportByPlanId();
      }
    }

    public void PlanSourceDetailReportByUid(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanSourceDetailReportByUid_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      PlanSourceDetailReportByUid_call method_call = new PlanSourceDetailReportByUid_call(q, p, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class PlanSourceDetailReportByUid_call extends org.apache.thrift.async.TAsyncMethodCall {
      private queryOptions q;
      private pageOptions p;
      public PlanSourceDetailReportByUid_call(queryOptions q, pageOptions p, org.apache.thrift.async.AsyncMethodCallback<PlanSourceDetailReportByUid_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.q = q;
        this.p = p;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("PlanSourceDetailReportByUid", org.apache.thrift.protocol.TMessageType.CALL, 0));
        PlanSourceDetailReportByUid_args args = new PlanSourceDetailReportByUid_args();
        args.setQ(q);
        args.setP(p);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public reportResult getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_PlanSourceDetailReportByUid();
      }
    }

    public void ping(int ignoreme, org.apache.thrift.async.AsyncMethodCallback<ping_call> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      ping_call method_call = new ping_call(ignoreme, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class ping_call extends org.apache.thrift.async.TAsyncMethodCall {
      private int ignoreme;
      public ping_call(int ignoreme, org.apache.thrift.async.AsyncMethodCallback<ping_call> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.ignoreme = ignoreme;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("ping", org.apache.thrift.protocol.TMessageType.CALL, 0));
        ping_args args = new ping_args();
        args.setIgnoreme(ignoreme);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        (new Client(prot)).recv_ping();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("AdReportByGroupId", new AdReportByGroupId());
      processMap.put("GroupReportByPlanId", new GroupReportByPlanId());
      processMap.put("PlanReportByUid", new PlanReportByUid());
      processMap.put("AdAreaDetailReportByGroupId", new AdAreaDetailReportByGroupId());
      processMap.put("GroupAreaDetailReportByPlanId", new GroupAreaDetailReportByPlanId());
      processMap.put("PlanAreaDetailReportByUid", new PlanAreaDetailReportByUid());
      processMap.put("AdDayDetailReportByGroupId", new AdDayDetailReportByGroupId());
      processMap.put("GroupDayDetailReportByPlanId", new GroupDayDetailReportByPlanId());
      processMap.put("PlanDayDetailReportByUid", new PlanDayDetailReportByUid());
      processMap.put("AdSourceDetailReportByGroupId", new AdSourceDetailReportByGroupId());
      processMap.put("GroupSourceDetailReportByPlanId", new GroupSourceDetailReportByPlanId());
      processMap.put("PlanSourceDetailReportByUid", new PlanSourceDetailReportByUid());
      processMap.put("ping", new ping());
      return processMap;
    }

    private static class AdReportByGroupId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, AdReportByGroupId_args> {
      public AdReportByGroupId() {
        super("AdReportByGroupId");
      }

      protected AdReportByGroupId_args getEmptyArgsInstance() {
        return new AdReportByGroupId_args();
      }

      protected AdReportByGroupId_result getResult(I iface, AdReportByGroupId_args args) throws org.apache.thrift.TException {
        AdReportByGroupId_result result = new AdReportByGroupId_result();
        result.success = iface.AdReportByGroupId(args.q, args.p);
        return result;
      }
    }

    private static class GroupReportByPlanId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GroupReportByPlanId_args> {
      public GroupReportByPlanId() {
        super("GroupReportByPlanId");
      }

      protected GroupReportByPlanId_args getEmptyArgsInstance() {
        return new GroupReportByPlanId_args();
      }

      protected GroupReportByPlanId_result getResult(I iface, GroupReportByPlanId_args args) throws org.apache.thrift.TException {
        GroupReportByPlanId_result result = new GroupReportByPlanId_result();
        result.success = iface.GroupReportByPlanId(args.q, args.p);
        return result;
      }
    }

    private static class PlanReportByUid<I extends Iface> extends org.apache.thrift.ProcessFunction<I, PlanReportByUid_args> {
      public PlanReportByUid() {
        super("PlanReportByUid");
      }

      protected PlanReportByUid_args getEmptyArgsInstance() {
        return new PlanReportByUid_args();
      }

      protected PlanReportByUid_result getResult(I iface, PlanReportByUid_args args) throws org.apache.thrift.TException {
        PlanReportByUid_result result = new PlanReportByUid_result();
        result.success = iface.PlanReportByUid(args.q, args.p);
        return result;
      }
    }

    private static class AdAreaDetailReportByGroupId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, AdAreaDetailReportByGroupId_args> {
      public AdAreaDetailReportByGroupId() {
        super("AdAreaDetailReportByGroupId");
      }

      protected AdAreaDetailReportByGroupId_args getEmptyArgsInstance() {
        return new AdAreaDetailReportByGroupId_args();
      }

      protected AdAreaDetailReportByGroupId_result getResult(I iface, AdAreaDetailReportByGroupId_args args) throws org.apache.thrift.TException {
        AdAreaDetailReportByGroupId_result result = new AdAreaDetailReportByGroupId_result();
        result.success = iface.AdAreaDetailReportByGroupId(args.q, args.p);
        return result;
      }
    }

    private static class GroupAreaDetailReportByPlanId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GroupAreaDetailReportByPlanId_args> {
      public GroupAreaDetailReportByPlanId() {
        super("GroupAreaDetailReportByPlanId");
      }

      protected GroupAreaDetailReportByPlanId_args getEmptyArgsInstance() {
        return new GroupAreaDetailReportByPlanId_args();
      }

      protected GroupAreaDetailReportByPlanId_result getResult(I iface, GroupAreaDetailReportByPlanId_args args) throws org.apache.thrift.TException {
        GroupAreaDetailReportByPlanId_result result = new GroupAreaDetailReportByPlanId_result();
        result.success = iface.GroupAreaDetailReportByPlanId(args.q, args.p);
        return result;
      }
    }

    private static class PlanAreaDetailReportByUid<I extends Iface> extends org.apache.thrift.ProcessFunction<I, PlanAreaDetailReportByUid_args> {
      public PlanAreaDetailReportByUid() {
        super("PlanAreaDetailReportByUid");
      }

      protected PlanAreaDetailReportByUid_args getEmptyArgsInstance() {
        return new PlanAreaDetailReportByUid_args();
      }

      protected PlanAreaDetailReportByUid_result getResult(I iface, PlanAreaDetailReportByUid_args args) throws org.apache.thrift.TException {
        PlanAreaDetailReportByUid_result result = new PlanAreaDetailReportByUid_result();
        result.success = iface.PlanAreaDetailReportByUid(args.q, args.p);
        return result;
      }
    }

    private static class AdDayDetailReportByGroupId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, AdDayDetailReportByGroupId_args> {
      public AdDayDetailReportByGroupId() {
        super("AdDayDetailReportByGroupId");
      }

      protected AdDayDetailReportByGroupId_args getEmptyArgsInstance() {
        return new AdDayDetailReportByGroupId_args();
      }

      protected AdDayDetailReportByGroupId_result getResult(I iface, AdDayDetailReportByGroupId_args args) throws org.apache.thrift.TException {
        AdDayDetailReportByGroupId_result result = new AdDayDetailReportByGroupId_result();
        result.success = iface.AdDayDetailReportByGroupId(args.q, args.p);
        return result;
      }
    }

    private static class GroupDayDetailReportByPlanId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GroupDayDetailReportByPlanId_args> {
      public GroupDayDetailReportByPlanId() {
        super("GroupDayDetailReportByPlanId");
      }

      protected GroupDayDetailReportByPlanId_args getEmptyArgsInstance() {
        return new GroupDayDetailReportByPlanId_args();
      }

      protected GroupDayDetailReportByPlanId_result getResult(I iface, GroupDayDetailReportByPlanId_args args) throws org.apache.thrift.TException {
        GroupDayDetailReportByPlanId_result result = new GroupDayDetailReportByPlanId_result();
        result.success = iface.GroupDayDetailReportByPlanId(args.q, args.p);
        return result;
      }
    }

    private static class PlanDayDetailReportByUid<I extends Iface> extends org.apache.thrift.ProcessFunction<I, PlanDayDetailReportByUid_args> {
      public PlanDayDetailReportByUid() {
        super("PlanDayDetailReportByUid");
      }

      protected PlanDayDetailReportByUid_args getEmptyArgsInstance() {
        return new PlanDayDetailReportByUid_args();
      }

      protected PlanDayDetailReportByUid_result getResult(I iface, PlanDayDetailReportByUid_args args) throws org.apache.thrift.TException {
        PlanDayDetailReportByUid_result result = new PlanDayDetailReportByUid_result();
        result.success = iface.PlanDayDetailReportByUid(args.q, args.p);
        return result;
      }
    }

    private static class AdSourceDetailReportByGroupId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, AdSourceDetailReportByGroupId_args> {
      public AdSourceDetailReportByGroupId() {
        super("AdSourceDetailReportByGroupId");
      }

      protected AdSourceDetailReportByGroupId_args getEmptyArgsInstance() {
        return new AdSourceDetailReportByGroupId_args();
      }

      protected AdSourceDetailReportByGroupId_result getResult(I iface, AdSourceDetailReportByGroupId_args args) throws org.apache.thrift.TException {
        AdSourceDetailReportByGroupId_result result = new AdSourceDetailReportByGroupId_result();
        result.success = iface.AdSourceDetailReportByGroupId(args.q, args.p);
        return result;
      }
    }

    private static class GroupSourceDetailReportByPlanId<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GroupSourceDetailReportByPlanId_args> {
      public GroupSourceDetailReportByPlanId() {
        super("GroupSourceDetailReportByPlanId");
      }

      protected GroupSourceDetailReportByPlanId_args getEmptyArgsInstance() {
        return new GroupSourceDetailReportByPlanId_args();
      }

      protected GroupSourceDetailReportByPlanId_result getResult(I iface, GroupSourceDetailReportByPlanId_args args) throws org.apache.thrift.TException {
        GroupSourceDetailReportByPlanId_result result = new GroupSourceDetailReportByPlanId_result();
        result.success = iface.GroupSourceDetailReportByPlanId(args.q, args.p);
        return result;
      }
    }

    private static class PlanSourceDetailReportByUid<I extends Iface> extends org.apache.thrift.ProcessFunction<I, PlanSourceDetailReportByUid_args> {
      public PlanSourceDetailReportByUid() {
        super("PlanSourceDetailReportByUid");
      }

      protected PlanSourceDetailReportByUid_args getEmptyArgsInstance() {
        return new PlanSourceDetailReportByUid_args();
      }

      protected PlanSourceDetailReportByUid_result getResult(I iface, PlanSourceDetailReportByUid_args args) throws org.apache.thrift.TException {
        PlanSourceDetailReportByUid_result result = new PlanSourceDetailReportByUid_result();
        result.success = iface.PlanSourceDetailReportByUid(args.q, args.p);
        return result;
      }
    }

    private static class ping<I extends Iface> extends org.apache.thrift.ProcessFunction<I, ping_args> {
      public ping() {
        super("ping");
      }

      protected ping_args getEmptyArgsInstance() {
        return new ping_args();
      }

      protected ping_result getResult(I iface, ping_args args) throws org.apache.thrift.TException {
        ping_result result = new ping_result();
        iface.ping(args.ignoreme);
        return result;
      }
    }

  }

  public static class AdReportByGroupId_args implements org.apache.thrift.TBase<AdReportByGroupId_args, AdReportByGroupId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdReportByGroupId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdReportByGroupId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdReportByGroupId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdReportByGroupId_args.class, metaDataMap);
    }

    public AdReportByGroupId_args() {
    }

    public AdReportByGroupId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdReportByGroupId_args(AdReportByGroupId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public AdReportByGroupId_args deepCopy() {
      return new AdReportByGroupId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public AdReportByGroupId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public AdReportByGroupId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdReportByGroupId_args)
        return this.equals((AdReportByGroupId_args)that);
      return false;
    }

    public boolean equals(AdReportByGroupId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdReportByGroupId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdReportByGroupId_args typedOther = (AdReportByGroupId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdReportByGroupId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdReportByGroupId_argsStandardSchemeFactory implements SchemeFactory {
      public AdReportByGroupId_argsStandardScheme getScheme() {
        return new AdReportByGroupId_argsStandardScheme();
      }
    }

    private static class AdReportByGroupId_argsStandardScheme extends StandardScheme<AdReportByGroupId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdReportByGroupId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdReportByGroupId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdReportByGroupId_argsTupleSchemeFactory implements SchemeFactory {
      public AdReportByGroupId_argsTupleScheme getScheme() {
        return new AdReportByGroupId_argsTupleScheme();
      }
    }

    private static class AdReportByGroupId_argsTupleScheme extends TupleScheme<AdReportByGroupId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class AdReportByGroupId_result implements org.apache.thrift.TBase<AdReportByGroupId_result, AdReportByGroupId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdReportByGroupId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdReportByGroupId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdReportByGroupId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdReportByGroupId_result.class, metaDataMap);
    }

    public AdReportByGroupId_result() {
    }

    public AdReportByGroupId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdReportByGroupId_result(AdReportByGroupId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public AdReportByGroupId_result deepCopy() {
      return new AdReportByGroupId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public AdReportByGroupId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdReportByGroupId_result)
        return this.equals((AdReportByGroupId_result)that);
      return false;
    }

    public boolean equals(AdReportByGroupId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdReportByGroupId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdReportByGroupId_result typedOther = (AdReportByGroupId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdReportByGroupId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdReportByGroupId_resultStandardSchemeFactory implements SchemeFactory {
      public AdReportByGroupId_resultStandardScheme getScheme() {
        return new AdReportByGroupId_resultStandardScheme();
      }
    }

    private static class AdReportByGroupId_resultStandardScheme extends StandardScheme<AdReportByGroupId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdReportByGroupId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdReportByGroupId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdReportByGroupId_resultTupleSchemeFactory implements SchemeFactory {
      public AdReportByGroupId_resultTupleScheme getScheme() {
        return new AdReportByGroupId_resultTupleScheme();
      }
    }

    private static class AdReportByGroupId_resultTupleScheme extends TupleScheme<AdReportByGroupId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class GroupReportByPlanId_args implements org.apache.thrift.TBase<GroupReportByPlanId_args, GroupReportByPlanId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupReportByPlanId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupReportByPlanId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupReportByPlanId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupReportByPlanId_args.class, metaDataMap);
    }

    public GroupReportByPlanId_args() {
    }

    public GroupReportByPlanId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupReportByPlanId_args(GroupReportByPlanId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public GroupReportByPlanId_args deepCopy() {
      return new GroupReportByPlanId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public GroupReportByPlanId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public GroupReportByPlanId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupReportByPlanId_args)
        return this.equals((GroupReportByPlanId_args)that);
      return false;
    }

    public boolean equals(GroupReportByPlanId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupReportByPlanId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupReportByPlanId_args typedOther = (GroupReportByPlanId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupReportByPlanId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupReportByPlanId_argsStandardSchemeFactory implements SchemeFactory {
      public GroupReportByPlanId_argsStandardScheme getScheme() {
        return new GroupReportByPlanId_argsStandardScheme();
      }
    }

    private static class GroupReportByPlanId_argsStandardScheme extends StandardScheme<GroupReportByPlanId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupReportByPlanId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupReportByPlanId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupReportByPlanId_argsTupleSchemeFactory implements SchemeFactory {
      public GroupReportByPlanId_argsTupleScheme getScheme() {
        return new GroupReportByPlanId_argsTupleScheme();
      }
    }

    private static class GroupReportByPlanId_argsTupleScheme extends TupleScheme<GroupReportByPlanId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class GroupReportByPlanId_result implements org.apache.thrift.TBase<GroupReportByPlanId_result, GroupReportByPlanId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupReportByPlanId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupReportByPlanId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupReportByPlanId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupReportByPlanId_result.class, metaDataMap);
    }

    public GroupReportByPlanId_result() {
    }

    public GroupReportByPlanId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupReportByPlanId_result(GroupReportByPlanId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public GroupReportByPlanId_result deepCopy() {
      return new GroupReportByPlanId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public GroupReportByPlanId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupReportByPlanId_result)
        return this.equals((GroupReportByPlanId_result)that);
      return false;
    }

    public boolean equals(GroupReportByPlanId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupReportByPlanId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupReportByPlanId_result typedOther = (GroupReportByPlanId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupReportByPlanId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupReportByPlanId_resultStandardSchemeFactory implements SchemeFactory {
      public GroupReportByPlanId_resultStandardScheme getScheme() {
        return new GroupReportByPlanId_resultStandardScheme();
      }
    }

    private static class GroupReportByPlanId_resultStandardScheme extends StandardScheme<GroupReportByPlanId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupReportByPlanId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupReportByPlanId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupReportByPlanId_resultTupleSchemeFactory implements SchemeFactory {
      public GroupReportByPlanId_resultTupleScheme getScheme() {
        return new GroupReportByPlanId_resultTupleScheme();
      }
    }

    private static class GroupReportByPlanId_resultTupleScheme extends TupleScheme<GroupReportByPlanId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class PlanReportByUid_args implements org.apache.thrift.TBase<PlanReportByUid_args, PlanReportByUid_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanReportByUid_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanReportByUid_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanReportByUid_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanReportByUid_args.class, metaDataMap);
    }

    public PlanReportByUid_args() {
    }

    public PlanReportByUid_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanReportByUid_args(PlanReportByUid_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public PlanReportByUid_args deepCopy() {
      return new PlanReportByUid_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public PlanReportByUid_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public PlanReportByUid_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanReportByUid_args)
        return this.equals((PlanReportByUid_args)that);
      return false;
    }

    public boolean equals(PlanReportByUid_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanReportByUid_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanReportByUid_args typedOther = (PlanReportByUid_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanReportByUid_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanReportByUid_argsStandardSchemeFactory implements SchemeFactory {
      public PlanReportByUid_argsStandardScheme getScheme() {
        return new PlanReportByUid_argsStandardScheme();
      }
    }

    private static class PlanReportByUid_argsStandardScheme extends StandardScheme<PlanReportByUid_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanReportByUid_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanReportByUid_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanReportByUid_argsTupleSchemeFactory implements SchemeFactory {
      public PlanReportByUid_argsTupleScheme getScheme() {
        return new PlanReportByUid_argsTupleScheme();
      }
    }

    private static class PlanReportByUid_argsTupleScheme extends TupleScheme<PlanReportByUid_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class PlanReportByUid_result implements org.apache.thrift.TBase<PlanReportByUid_result, PlanReportByUid_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanReportByUid_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanReportByUid_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanReportByUid_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanReportByUid_result.class, metaDataMap);
    }

    public PlanReportByUid_result() {
    }

    public PlanReportByUid_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanReportByUid_result(PlanReportByUid_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public PlanReportByUid_result deepCopy() {
      return new PlanReportByUid_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public PlanReportByUid_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanReportByUid_result)
        return this.equals((PlanReportByUid_result)that);
      return false;
    }

    public boolean equals(PlanReportByUid_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanReportByUid_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanReportByUid_result typedOther = (PlanReportByUid_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanReportByUid_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanReportByUid_resultStandardSchemeFactory implements SchemeFactory {
      public PlanReportByUid_resultStandardScheme getScheme() {
        return new PlanReportByUid_resultStandardScheme();
      }
    }

    private static class PlanReportByUid_resultStandardScheme extends StandardScheme<PlanReportByUid_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanReportByUid_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanReportByUid_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanReportByUid_resultTupleSchemeFactory implements SchemeFactory {
      public PlanReportByUid_resultTupleScheme getScheme() {
        return new PlanReportByUid_resultTupleScheme();
      }
    }

    private static class PlanReportByUid_resultTupleScheme extends TupleScheme<PlanReportByUid_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class AdAreaDetailReportByGroupId_args implements org.apache.thrift.TBase<AdAreaDetailReportByGroupId_args, AdAreaDetailReportByGroupId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdAreaDetailReportByGroupId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdAreaDetailReportByGroupId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdAreaDetailReportByGroupId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdAreaDetailReportByGroupId_args.class, metaDataMap);
    }

    public AdAreaDetailReportByGroupId_args() {
    }

    public AdAreaDetailReportByGroupId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdAreaDetailReportByGroupId_args(AdAreaDetailReportByGroupId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public AdAreaDetailReportByGroupId_args deepCopy() {
      return new AdAreaDetailReportByGroupId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public AdAreaDetailReportByGroupId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public AdAreaDetailReportByGroupId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdAreaDetailReportByGroupId_args)
        return this.equals((AdAreaDetailReportByGroupId_args)that);
      return false;
    }

    public boolean equals(AdAreaDetailReportByGroupId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdAreaDetailReportByGroupId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdAreaDetailReportByGroupId_args typedOther = (AdAreaDetailReportByGroupId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdAreaDetailReportByGroupId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdAreaDetailReportByGroupId_argsStandardSchemeFactory implements SchemeFactory {
      public AdAreaDetailReportByGroupId_argsStandardScheme getScheme() {
        return new AdAreaDetailReportByGroupId_argsStandardScheme();
      }
    }

    private static class AdAreaDetailReportByGroupId_argsStandardScheme extends StandardScheme<AdAreaDetailReportByGroupId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdAreaDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdAreaDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdAreaDetailReportByGroupId_argsTupleSchemeFactory implements SchemeFactory {
      public AdAreaDetailReportByGroupId_argsTupleScheme getScheme() {
        return new AdAreaDetailReportByGroupId_argsTupleScheme();
      }
    }

    private static class AdAreaDetailReportByGroupId_argsTupleScheme extends TupleScheme<AdAreaDetailReportByGroupId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdAreaDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdAreaDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class AdAreaDetailReportByGroupId_result implements org.apache.thrift.TBase<AdAreaDetailReportByGroupId_result, AdAreaDetailReportByGroupId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdAreaDetailReportByGroupId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdAreaDetailReportByGroupId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdAreaDetailReportByGroupId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdAreaDetailReportByGroupId_result.class, metaDataMap);
    }

    public AdAreaDetailReportByGroupId_result() {
    }

    public AdAreaDetailReportByGroupId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdAreaDetailReportByGroupId_result(AdAreaDetailReportByGroupId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public AdAreaDetailReportByGroupId_result deepCopy() {
      return new AdAreaDetailReportByGroupId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public AdAreaDetailReportByGroupId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdAreaDetailReportByGroupId_result)
        return this.equals((AdAreaDetailReportByGroupId_result)that);
      return false;
    }

    public boolean equals(AdAreaDetailReportByGroupId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdAreaDetailReportByGroupId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdAreaDetailReportByGroupId_result typedOther = (AdAreaDetailReportByGroupId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdAreaDetailReportByGroupId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdAreaDetailReportByGroupId_resultStandardSchemeFactory implements SchemeFactory {
      public AdAreaDetailReportByGroupId_resultStandardScheme getScheme() {
        return new AdAreaDetailReportByGroupId_resultStandardScheme();
      }
    }

    private static class AdAreaDetailReportByGroupId_resultStandardScheme extends StandardScheme<AdAreaDetailReportByGroupId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdAreaDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdAreaDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdAreaDetailReportByGroupId_resultTupleSchemeFactory implements SchemeFactory {
      public AdAreaDetailReportByGroupId_resultTupleScheme getScheme() {
        return new AdAreaDetailReportByGroupId_resultTupleScheme();
      }
    }

    private static class AdAreaDetailReportByGroupId_resultTupleScheme extends TupleScheme<AdAreaDetailReportByGroupId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdAreaDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdAreaDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class GroupAreaDetailReportByPlanId_args implements org.apache.thrift.TBase<GroupAreaDetailReportByPlanId_args, GroupAreaDetailReportByPlanId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupAreaDetailReportByPlanId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupAreaDetailReportByPlanId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupAreaDetailReportByPlanId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupAreaDetailReportByPlanId_args.class, metaDataMap);
    }

    public GroupAreaDetailReportByPlanId_args() {
    }

    public GroupAreaDetailReportByPlanId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupAreaDetailReportByPlanId_args(GroupAreaDetailReportByPlanId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public GroupAreaDetailReportByPlanId_args deepCopy() {
      return new GroupAreaDetailReportByPlanId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public GroupAreaDetailReportByPlanId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public GroupAreaDetailReportByPlanId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupAreaDetailReportByPlanId_args)
        return this.equals((GroupAreaDetailReportByPlanId_args)that);
      return false;
    }

    public boolean equals(GroupAreaDetailReportByPlanId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupAreaDetailReportByPlanId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupAreaDetailReportByPlanId_args typedOther = (GroupAreaDetailReportByPlanId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupAreaDetailReportByPlanId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupAreaDetailReportByPlanId_argsStandardSchemeFactory implements SchemeFactory {
      public GroupAreaDetailReportByPlanId_argsStandardScheme getScheme() {
        return new GroupAreaDetailReportByPlanId_argsStandardScheme();
      }
    }

    private static class GroupAreaDetailReportByPlanId_argsStandardScheme extends StandardScheme<GroupAreaDetailReportByPlanId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupAreaDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupAreaDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupAreaDetailReportByPlanId_argsTupleSchemeFactory implements SchemeFactory {
      public GroupAreaDetailReportByPlanId_argsTupleScheme getScheme() {
        return new GroupAreaDetailReportByPlanId_argsTupleScheme();
      }
    }

    private static class GroupAreaDetailReportByPlanId_argsTupleScheme extends TupleScheme<GroupAreaDetailReportByPlanId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupAreaDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupAreaDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class GroupAreaDetailReportByPlanId_result implements org.apache.thrift.TBase<GroupAreaDetailReportByPlanId_result, GroupAreaDetailReportByPlanId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupAreaDetailReportByPlanId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupAreaDetailReportByPlanId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupAreaDetailReportByPlanId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupAreaDetailReportByPlanId_result.class, metaDataMap);
    }

    public GroupAreaDetailReportByPlanId_result() {
    }

    public GroupAreaDetailReportByPlanId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupAreaDetailReportByPlanId_result(GroupAreaDetailReportByPlanId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public GroupAreaDetailReportByPlanId_result deepCopy() {
      return new GroupAreaDetailReportByPlanId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public GroupAreaDetailReportByPlanId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupAreaDetailReportByPlanId_result)
        return this.equals((GroupAreaDetailReportByPlanId_result)that);
      return false;
    }

    public boolean equals(GroupAreaDetailReportByPlanId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupAreaDetailReportByPlanId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupAreaDetailReportByPlanId_result typedOther = (GroupAreaDetailReportByPlanId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupAreaDetailReportByPlanId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupAreaDetailReportByPlanId_resultStandardSchemeFactory implements SchemeFactory {
      public GroupAreaDetailReportByPlanId_resultStandardScheme getScheme() {
        return new GroupAreaDetailReportByPlanId_resultStandardScheme();
      }
    }

    private static class GroupAreaDetailReportByPlanId_resultStandardScheme extends StandardScheme<GroupAreaDetailReportByPlanId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupAreaDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupAreaDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupAreaDetailReportByPlanId_resultTupleSchemeFactory implements SchemeFactory {
      public GroupAreaDetailReportByPlanId_resultTupleScheme getScheme() {
        return new GroupAreaDetailReportByPlanId_resultTupleScheme();
      }
    }

    private static class GroupAreaDetailReportByPlanId_resultTupleScheme extends TupleScheme<GroupAreaDetailReportByPlanId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupAreaDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupAreaDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class PlanAreaDetailReportByUid_args implements org.apache.thrift.TBase<PlanAreaDetailReportByUid_args, PlanAreaDetailReportByUid_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanAreaDetailReportByUid_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanAreaDetailReportByUid_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanAreaDetailReportByUid_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanAreaDetailReportByUid_args.class, metaDataMap);
    }

    public PlanAreaDetailReportByUid_args() {
    }

    public PlanAreaDetailReportByUid_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanAreaDetailReportByUid_args(PlanAreaDetailReportByUid_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public PlanAreaDetailReportByUid_args deepCopy() {
      return new PlanAreaDetailReportByUid_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public PlanAreaDetailReportByUid_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public PlanAreaDetailReportByUid_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanAreaDetailReportByUid_args)
        return this.equals((PlanAreaDetailReportByUid_args)that);
      return false;
    }

    public boolean equals(PlanAreaDetailReportByUid_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanAreaDetailReportByUid_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanAreaDetailReportByUid_args typedOther = (PlanAreaDetailReportByUid_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanAreaDetailReportByUid_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanAreaDetailReportByUid_argsStandardSchemeFactory implements SchemeFactory {
      public PlanAreaDetailReportByUid_argsStandardScheme getScheme() {
        return new PlanAreaDetailReportByUid_argsStandardScheme();
      }
    }

    private static class PlanAreaDetailReportByUid_argsStandardScheme extends StandardScheme<PlanAreaDetailReportByUid_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanAreaDetailReportByUid_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanAreaDetailReportByUid_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanAreaDetailReportByUid_argsTupleSchemeFactory implements SchemeFactory {
      public PlanAreaDetailReportByUid_argsTupleScheme getScheme() {
        return new PlanAreaDetailReportByUid_argsTupleScheme();
      }
    }

    private static class PlanAreaDetailReportByUid_argsTupleScheme extends TupleScheme<PlanAreaDetailReportByUid_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanAreaDetailReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanAreaDetailReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class PlanAreaDetailReportByUid_result implements org.apache.thrift.TBase<PlanAreaDetailReportByUid_result, PlanAreaDetailReportByUid_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanAreaDetailReportByUid_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanAreaDetailReportByUid_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanAreaDetailReportByUid_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanAreaDetailReportByUid_result.class, metaDataMap);
    }

    public PlanAreaDetailReportByUid_result() {
    }

    public PlanAreaDetailReportByUid_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanAreaDetailReportByUid_result(PlanAreaDetailReportByUid_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public PlanAreaDetailReportByUid_result deepCopy() {
      return new PlanAreaDetailReportByUid_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public PlanAreaDetailReportByUid_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanAreaDetailReportByUid_result)
        return this.equals((PlanAreaDetailReportByUid_result)that);
      return false;
    }

    public boolean equals(PlanAreaDetailReportByUid_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanAreaDetailReportByUid_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanAreaDetailReportByUid_result typedOther = (PlanAreaDetailReportByUid_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanAreaDetailReportByUid_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanAreaDetailReportByUid_resultStandardSchemeFactory implements SchemeFactory {
      public PlanAreaDetailReportByUid_resultStandardScheme getScheme() {
        return new PlanAreaDetailReportByUid_resultStandardScheme();
      }
    }

    private static class PlanAreaDetailReportByUid_resultStandardScheme extends StandardScheme<PlanAreaDetailReportByUid_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanAreaDetailReportByUid_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanAreaDetailReportByUid_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanAreaDetailReportByUid_resultTupleSchemeFactory implements SchemeFactory {
      public PlanAreaDetailReportByUid_resultTupleScheme getScheme() {
        return new PlanAreaDetailReportByUid_resultTupleScheme();
      }
    }

    private static class PlanAreaDetailReportByUid_resultTupleScheme extends TupleScheme<PlanAreaDetailReportByUid_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanAreaDetailReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanAreaDetailReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class AdDayDetailReportByGroupId_args implements org.apache.thrift.TBase<AdDayDetailReportByGroupId_args, AdDayDetailReportByGroupId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdDayDetailReportByGroupId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdDayDetailReportByGroupId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdDayDetailReportByGroupId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdDayDetailReportByGroupId_args.class, metaDataMap);
    }

    public AdDayDetailReportByGroupId_args() {
    }

    public AdDayDetailReportByGroupId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdDayDetailReportByGroupId_args(AdDayDetailReportByGroupId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public AdDayDetailReportByGroupId_args deepCopy() {
      return new AdDayDetailReportByGroupId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public AdDayDetailReportByGroupId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public AdDayDetailReportByGroupId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdDayDetailReportByGroupId_args)
        return this.equals((AdDayDetailReportByGroupId_args)that);
      return false;
    }

    public boolean equals(AdDayDetailReportByGroupId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdDayDetailReportByGroupId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdDayDetailReportByGroupId_args typedOther = (AdDayDetailReportByGroupId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdDayDetailReportByGroupId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdDayDetailReportByGroupId_argsStandardSchemeFactory implements SchemeFactory {
      public AdDayDetailReportByGroupId_argsStandardScheme getScheme() {
        return new AdDayDetailReportByGroupId_argsStandardScheme();
      }
    }

    private static class AdDayDetailReportByGroupId_argsStandardScheme extends StandardScheme<AdDayDetailReportByGroupId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdDayDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdDayDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdDayDetailReportByGroupId_argsTupleSchemeFactory implements SchemeFactory {
      public AdDayDetailReportByGroupId_argsTupleScheme getScheme() {
        return new AdDayDetailReportByGroupId_argsTupleScheme();
      }
    }

    private static class AdDayDetailReportByGroupId_argsTupleScheme extends TupleScheme<AdDayDetailReportByGroupId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdDayDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdDayDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class AdDayDetailReportByGroupId_result implements org.apache.thrift.TBase<AdDayDetailReportByGroupId_result, AdDayDetailReportByGroupId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdDayDetailReportByGroupId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdDayDetailReportByGroupId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdDayDetailReportByGroupId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdDayDetailReportByGroupId_result.class, metaDataMap);
    }

    public AdDayDetailReportByGroupId_result() {
    }

    public AdDayDetailReportByGroupId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdDayDetailReportByGroupId_result(AdDayDetailReportByGroupId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public AdDayDetailReportByGroupId_result deepCopy() {
      return new AdDayDetailReportByGroupId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public AdDayDetailReportByGroupId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdDayDetailReportByGroupId_result)
        return this.equals((AdDayDetailReportByGroupId_result)that);
      return false;
    }

    public boolean equals(AdDayDetailReportByGroupId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdDayDetailReportByGroupId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdDayDetailReportByGroupId_result typedOther = (AdDayDetailReportByGroupId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdDayDetailReportByGroupId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdDayDetailReportByGroupId_resultStandardSchemeFactory implements SchemeFactory {
      public AdDayDetailReportByGroupId_resultStandardScheme getScheme() {
        return new AdDayDetailReportByGroupId_resultStandardScheme();
      }
    }

    private static class AdDayDetailReportByGroupId_resultStandardScheme extends StandardScheme<AdDayDetailReportByGroupId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdDayDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdDayDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdDayDetailReportByGroupId_resultTupleSchemeFactory implements SchemeFactory {
      public AdDayDetailReportByGroupId_resultTupleScheme getScheme() {
        return new AdDayDetailReportByGroupId_resultTupleScheme();
      }
    }

    private static class AdDayDetailReportByGroupId_resultTupleScheme extends TupleScheme<AdDayDetailReportByGroupId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdDayDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdDayDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class GroupDayDetailReportByPlanId_args implements org.apache.thrift.TBase<GroupDayDetailReportByPlanId_args, GroupDayDetailReportByPlanId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupDayDetailReportByPlanId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupDayDetailReportByPlanId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupDayDetailReportByPlanId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupDayDetailReportByPlanId_args.class, metaDataMap);
    }

    public GroupDayDetailReportByPlanId_args() {
    }

    public GroupDayDetailReportByPlanId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupDayDetailReportByPlanId_args(GroupDayDetailReportByPlanId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public GroupDayDetailReportByPlanId_args deepCopy() {
      return new GroupDayDetailReportByPlanId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public GroupDayDetailReportByPlanId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public GroupDayDetailReportByPlanId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupDayDetailReportByPlanId_args)
        return this.equals((GroupDayDetailReportByPlanId_args)that);
      return false;
    }

    public boolean equals(GroupDayDetailReportByPlanId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupDayDetailReportByPlanId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupDayDetailReportByPlanId_args typedOther = (GroupDayDetailReportByPlanId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupDayDetailReportByPlanId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupDayDetailReportByPlanId_argsStandardSchemeFactory implements SchemeFactory {
      public GroupDayDetailReportByPlanId_argsStandardScheme getScheme() {
        return new GroupDayDetailReportByPlanId_argsStandardScheme();
      }
    }

    private static class GroupDayDetailReportByPlanId_argsStandardScheme extends StandardScheme<GroupDayDetailReportByPlanId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupDayDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupDayDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupDayDetailReportByPlanId_argsTupleSchemeFactory implements SchemeFactory {
      public GroupDayDetailReportByPlanId_argsTupleScheme getScheme() {
        return new GroupDayDetailReportByPlanId_argsTupleScheme();
      }
    }

    private static class GroupDayDetailReportByPlanId_argsTupleScheme extends TupleScheme<GroupDayDetailReportByPlanId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupDayDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupDayDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class GroupDayDetailReportByPlanId_result implements org.apache.thrift.TBase<GroupDayDetailReportByPlanId_result, GroupDayDetailReportByPlanId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupDayDetailReportByPlanId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupDayDetailReportByPlanId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupDayDetailReportByPlanId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupDayDetailReportByPlanId_result.class, metaDataMap);
    }

    public GroupDayDetailReportByPlanId_result() {
    }

    public GroupDayDetailReportByPlanId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupDayDetailReportByPlanId_result(GroupDayDetailReportByPlanId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public GroupDayDetailReportByPlanId_result deepCopy() {
      return new GroupDayDetailReportByPlanId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public GroupDayDetailReportByPlanId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupDayDetailReportByPlanId_result)
        return this.equals((GroupDayDetailReportByPlanId_result)that);
      return false;
    }

    public boolean equals(GroupDayDetailReportByPlanId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupDayDetailReportByPlanId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupDayDetailReportByPlanId_result typedOther = (GroupDayDetailReportByPlanId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupDayDetailReportByPlanId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupDayDetailReportByPlanId_resultStandardSchemeFactory implements SchemeFactory {
      public GroupDayDetailReportByPlanId_resultStandardScheme getScheme() {
        return new GroupDayDetailReportByPlanId_resultStandardScheme();
      }
    }

    private static class GroupDayDetailReportByPlanId_resultStandardScheme extends StandardScheme<GroupDayDetailReportByPlanId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupDayDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupDayDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupDayDetailReportByPlanId_resultTupleSchemeFactory implements SchemeFactory {
      public GroupDayDetailReportByPlanId_resultTupleScheme getScheme() {
        return new GroupDayDetailReportByPlanId_resultTupleScheme();
      }
    }

    private static class GroupDayDetailReportByPlanId_resultTupleScheme extends TupleScheme<GroupDayDetailReportByPlanId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupDayDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupDayDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class PlanDayDetailReportByUid_args implements org.apache.thrift.TBase<PlanDayDetailReportByUid_args, PlanDayDetailReportByUid_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanDayDetailReportByUid_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanDayDetailReportByUid_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanDayDetailReportByUid_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanDayDetailReportByUid_args.class, metaDataMap);
    }

    public PlanDayDetailReportByUid_args() {
    }

    public PlanDayDetailReportByUid_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanDayDetailReportByUid_args(PlanDayDetailReportByUid_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public PlanDayDetailReportByUid_args deepCopy() {
      return new PlanDayDetailReportByUid_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public PlanDayDetailReportByUid_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public PlanDayDetailReportByUid_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanDayDetailReportByUid_args)
        return this.equals((PlanDayDetailReportByUid_args)that);
      return false;
    }

    public boolean equals(PlanDayDetailReportByUid_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanDayDetailReportByUid_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanDayDetailReportByUid_args typedOther = (PlanDayDetailReportByUid_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanDayDetailReportByUid_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanDayDetailReportByUid_argsStandardSchemeFactory implements SchemeFactory {
      public PlanDayDetailReportByUid_argsStandardScheme getScheme() {
        return new PlanDayDetailReportByUid_argsStandardScheme();
      }
    }

    private static class PlanDayDetailReportByUid_argsStandardScheme extends StandardScheme<PlanDayDetailReportByUid_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanDayDetailReportByUid_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanDayDetailReportByUid_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanDayDetailReportByUid_argsTupleSchemeFactory implements SchemeFactory {
      public PlanDayDetailReportByUid_argsTupleScheme getScheme() {
        return new PlanDayDetailReportByUid_argsTupleScheme();
      }
    }

    private static class PlanDayDetailReportByUid_argsTupleScheme extends TupleScheme<PlanDayDetailReportByUid_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanDayDetailReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanDayDetailReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class PlanDayDetailReportByUid_result implements org.apache.thrift.TBase<PlanDayDetailReportByUid_result, PlanDayDetailReportByUid_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanDayDetailReportByUid_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanDayDetailReportByUid_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanDayDetailReportByUid_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanDayDetailReportByUid_result.class, metaDataMap);
    }

    public PlanDayDetailReportByUid_result() {
    }

    public PlanDayDetailReportByUid_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanDayDetailReportByUid_result(PlanDayDetailReportByUid_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public PlanDayDetailReportByUid_result deepCopy() {
      return new PlanDayDetailReportByUid_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public PlanDayDetailReportByUid_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanDayDetailReportByUid_result)
        return this.equals((PlanDayDetailReportByUid_result)that);
      return false;
    }

    public boolean equals(PlanDayDetailReportByUid_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanDayDetailReportByUid_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanDayDetailReportByUid_result typedOther = (PlanDayDetailReportByUid_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanDayDetailReportByUid_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanDayDetailReportByUid_resultStandardSchemeFactory implements SchemeFactory {
      public PlanDayDetailReportByUid_resultStandardScheme getScheme() {
        return new PlanDayDetailReportByUid_resultStandardScheme();
      }
    }

    private static class PlanDayDetailReportByUid_resultStandardScheme extends StandardScheme<PlanDayDetailReportByUid_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanDayDetailReportByUid_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanDayDetailReportByUid_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanDayDetailReportByUid_resultTupleSchemeFactory implements SchemeFactory {
      public PlanDayDetailReportByUid_resultTupleScheme getScheme() {
        return new PlanDayDetailReportByUid_resultTupleScheme();
      }
    }

    private static class PlanDayDetailReportByUid_resultTupleScheme extends TupleScheme<PlanDayDetailReportByUid_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanDayDetailReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanDayDetailReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class AdSourceDetailReportByGroupId_args implements org.apache.thrift.TBase<AdSourceDetailReportByGroupId_args, AdSourceDetailReportByGroupId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdSourceDetailReportByGroupId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdSourceDetailReportByGroupId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdSourceDetailReportByGroupId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdSourceDetailReportByGroupId_args.class, metaDataMap);
    }

    public AdSourceDetailReportByGroupId_args() {
    }

    public AdSourceDetailReportByGroupId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdSourceDetailReportByGroupId_args(AdSourceDetailReportByGroupId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public AdSourceDetailReportByGroupId_args deepCopy() {
      return new AdSourceDetailReportByGroupId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public AdSourceDetailReportByGroupId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public AdSourceDetailReportByGroupId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdSourceDetailReportByGroupId_args)
        return this.equals((AdSourceDetailReportByGroupId_args)that);
      return false;
    }

    public boolean equals(AdSourceDetailReportByGroupId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdSourceDetailReportByGroupId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdSourceDetailReportByGroupId_args typedOther = (AdSourceDetailReportByGroupId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdSourceDetailReportByGroupId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdSourceDetailReportByGroupId_argsStandardSchemeFactory implements SchemeFactory {
      public AdSourceDetailReportByGroupId_argsStandardScheme getScheme() {
        return new AdSourceDetailReportByGroupId_argsStandardScheme();
      }
    }

    private static class AdSourceDetailReportByGroupId_argsStandardScheme extends StandardScheme<AdSourceDetailReportByGroupId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdSourceDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdSourceDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdSourceDetailReportByGroupId_argsTupleSchemeFactory implements SchemeFactory {
      public AdSourceDetailReportByGroupId_argsTupleScheme getScheme() {
        return new AdSourceDetailReportByGroupId_argsTupleScheme();
      }
    }

    private static class AdSourceDetailReportByGroupId_argsTupleScheme extends TupleScheme<AdSourceDetailReportByGroupId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdSourceDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdSourceDetailReportByGroupId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class AdSourceDetailReportByGroupId_result implements org.apache.thrift.TBase<AdSourceDetailReportByGroupId_result, AdSourceDetailReportByGroupId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdSourceDetailReportByGroupId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new AdSourceDetailReportByGroupId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new AdSourceDetailReportByGroupId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdSourceDetailReportByGroupId_result.class, metaDataMap);
    }

    public AdSourceDetailReportByGroupId_result() {
    }

    public AdSourceDetailReportByGroupId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public AdSourceDetailReportByGroupId_result(AdSourceDetailReportByGroupId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public AdSourceDetailReportByGroupId_result deepCopy() {
      return new AdSourceDetailReportByGroupId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public AdSourceDetailReportByGroupId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof AdSourceDetailReportByGroupId_result)
        return this.equals((AdSourceDetailReportByGroupId_result)that);
      return false;
    }

    public boolean equals(AdSourceDetailReportByGroupId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(AdSourceDetailReportByGroupId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      AdSourceDetailReportByGroupId_result typedOther = (AdSourceDetailReportByGroupId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("AdSourceDetailReportByGroupId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class AdSourceDetailReportByGroupId_resultStandardSchemeFactory implements SchemeFactory {
      public AdSourceDetailReportByGroupId_resultStandardScheme getScheme() {
        return new AdSourceDetailReportByGroupId_resultStandardScheme();
      }
    }

    private static class AdSourceDetailReportByGroupId_resultStandardScheme extends StandardScheme<AdSourceDetailReportByGroupId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, AdSourceDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, AdSourceDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class AdSourceDetailReportByGroupId_resultTupleSchemeFactory implements SchemeFactory {
      public AdSourceDetailReportByGroupId_resultTupleScheme getScheme() {
        return new AdSourceDetailReportByGroupId_resultTupleScheme();
      }
    }

    private static class AdSourceDetailReportByGroupId_resultTupleScheme extends TupleScheme<AdSourceDetailReportByGroupId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, AdSourceDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, AdSourceDetailReportByGroupId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class GroupSourceDetailReportByPlanId_args implements org.apache.thrift.TBase<GroupSourceDetailReportByPlanId_args, GroupSourceDetailReportByPlanId_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupSourceDetailReportByPlanId_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupSourceDetailReportByPlanId_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupSourceDetailReportByPlanId_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupSourceDetailReportByPlanId_args.class, metaDataMap);
    }

    public GroupSourceDetailReportByPlanId_args() {
    }

    public GroupSourceDetailReportByPlanId_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupSourceDetailReportByPlanId_args(GroupSourceDetailReportByPlanId_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public GroupSourceDetailReportByPlanId_args deepCopy() {
      return new GroupSourceDetailReportByPlanId_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public GroupSourceDetailReportByPlanId_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public GroupSourceDetailReportByPlanId_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupSourceDetailReportByPlanId_args)
        return this.equals((GroupSourceDetailReportByPlanId_args)that);
      return false;
    }

    public boolean equals(GroupSourceDetailReportByPlanId_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupSourceDetailReportByPlanId_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupSourceDetailReportByPlanId_args typedOther = (GroupSourceDetailReportByPlanId_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupSourceDetailReportByPlanId_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupSourceDetailReportByPlanId_argsStandardSchemeFactory implements SchemeFactory {
      public GroupSourceDetailReportByPlanId_argsStandardScheme getScheme() {
        return new GroupSourceDetailReportByPlanId_argsStandardScheme();
      }
    }

    private static class GroupSourceDetailReportByPlanId_argsStandardScheme extends StandardScheme<GroupSourceDetailReportByPlanId_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupSourceDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupSourceDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupSourceDetailReportByPlanId_argsTupleSchemeFactory implements SchemeFactory {
      public GroupSourceDetailReportByPlanId_argsTupleScheme getScheme() {
        return new GroupSourceDetailReportByPlanId_argsTupleScheme();
      }
    }

    private static class GroupSourceDetailReportByPlanId_argsTupleScheme extends TupleScheme<GroupSourceDetailReportByPlanId_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupSourceDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupSourceDetailReportByPlanId_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class GroupSourceDetailReportByPlanId_result implements org.apache.thrift.TBase<GroupSourceDetailReportByPlanId_result, GroupSourceDetailReportByPlanId_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GroupSourceDetailReportByPlanId_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new GroupSourceDetailReportByPlanId_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new GroupSourceDetailReportByPlanId_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GroupSourceDetailReportByPlanId_result.class, metaDataMap);
    }

    public GroupSourceDetailReportByPlanId_result() {
    }

    public GroupSourceDetailReportByPlanId_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GroupSourceDetailReportByPlanId_result(GroupSourceDetailReportByPlanId_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public GroupSourceDetailReportByPlanId_result deepCopy() {
      return new GroupSourceDetailReportByPlanId_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public GroupSourceDetailReportByPlanId_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof GroupSourceDetailReportByPlanId_result)
        return this.equals((GroupSourceDetailReportByPlanId_result)that);
      return false;
    }

    public boolean equals(GroupSourceDetailReportByPlanId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(GroupSourceDetailReportByPlanId_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      GroupSourceDetailReportByPlanId_result typedOther = (GroupSourceDetailReportByPlanId_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("GroupSourceDetailReportByPlanId_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GroupSourceDetailReportByPlanId_resultStandardSchemeFactory implements SchemeFactory {
      public GroupSourceDetailReportByPlanId_resultStandardScheme getScheme() {
        return new GroupSourceDetailReportByPlanId_resultStandardScheme();
      }
    }

    private static class GroupSourceDetailReportByPlanId_resultStandardScheme extends StandardScheme<GroupSourceDetailReportByPlanId_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GroupSourceDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GroupSourceDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GroupSourceDetailReportByPlanId_resultTupleSchemeFactory implements SchemeFactory {
      public GroupSourceDetailReportByPlanId_resultTupleScheme getScheme() {
        return new GroupSourceDetailReportByPlanId_resultTupleScheme();
      }
    }

    private static class GroupSourceDetailReportByPlanId_resultTupleScheme extends TupleScheme<GroupSourceDetailReportByPlanId_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GroupSourceDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GroupSourceDetailReportByPlanId_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class PlanSourceDetailReportByUid_args implements org.apache.thrift.TBase<PlanSourceDetailReportByUid_args, PlanSourceDetailReportByUid_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanSourceDetailReportByUid_args");

    private static final org.apache.thrift.protocol.TField Q_FIELD_DESC = new org.apache.thrift.protocol.TField("q", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField P_FIELD_DESC = new org.apache.thrift.protocol.TField("p", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanSourceDetailReportByUid_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanSourceDetailReportByUid_argsTupleSchemeFactory());
    }

    public queryOptions q; // required
    public pageOptions p; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      Q((short)1, "q"),
      P((short)2, "p");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // Q
            return Q;
          case 2: // P
            return P;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.Q, new org.apache.thrift.meta_data.FieldMetaData("q", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, queryOptions.class)));
      tmpMap.put(_Fields.P, new org.apache.thrift.meta_data.FieldMetaData("p", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, pageOptions.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanSourceDetailReportByUid_args.class, metaDataMap);
    }

    public PlanSourceDetailReportByUid_args() {
    }

    public PlanSourceDetailReportByUid_args(
      queryOptions q,
      pageOptions p)
    {
      this();
      this.q = q;
      this.p = p;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanSourceDetailReportByUid_args(PlanSourceDetailReportByUid_args other) {
      if (other.isSetQ()) {
        this.q = new queryOptions(other.q);
      }
      if (other.isSetP()) {
        this.p = new pageOptions(other.p);
      }
    }

    public PlanSourceDetailReportByUid_args deepCopy() {
      return new PlanSourceDetailReportByUid_args(this);
    }

    @Override
    public void clear() {
      this.q = null;
      this.p = null;
    }

    public queryOptions getQ() {
      return this.q;
    }

    public PlanSourceDetailReportByUid_args setQ(queryOptions q) {
      this.q = q;
      return this;
    }

    public void unsetQ() {
      this.q = null;
    }

    /** Returns true if field q is set (has been assigned a value) and false otherwise */
    public boolean isSetQ() {
      return this.q != null;
    }

    public void setQIsSet(boolean value) {
      if (!value) {
        this.q = null;
      }
    }

    public pageOptions getP() {
      return this.p;
    }

    public PlanSourceDetailReportByUid_args setP(pageOptions p) {
      this.p = p;
      return this;
    }

    public void unsetP() {
      this.p = null;
    }

    /** Returns true if field p is set (has been assigned a value) and false otherwise */
    public boolean isSetP() {
      return this.p != null;
    }

    public void setPIsSet(boolean value) {
      if (!value) {
        this.p = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case Q:
        if (value == null) {
          unsetQ();
        } else {
          setQ((queryOptions)value);
        }
        break;

      case P:
        if (value == null) {
          unsetP();
        } else {
          setP((pageOptions)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case Q:
        return getQ();

      case P:
        return getP();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case Q:
        return isSetQ();
      case P:
        return isSetP();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanSourceDetailReportByUid_args)
        return this.equals((PlanSourceDetailReportByUid_args)that);
      return false;
    }

    public boolean equals(PlanSourceDetailReportByUid_args that) {
      if (that == null)
        return false;

      boolean this_present_q = true && this.isSetQ();
      boolean that_present_q = true && that.isSetQ();
      if (this_present_q || that_present_q) {
        if (!(this_present_q && that_present_q))
          return false;
        if (!this.q.equals(that.q))
          return false;
      }

      boolean this_present_p = true && this.isSetP();
      boolean that_present_p = true && that.isSetP();
      if (this_present_p || that_present_p) {
        if (!(this_present_p && that_present_p))
          return false;
        if (!this.p.equals(that.p))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanSourceDetailReportByUid_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanSourceDetailReportByUid_args typedOther = (PlanSourceDetailReportByUid_args)other;

      lastComparison = Boolean.valueOf(isSetQ()).compareTo(typedOther.isSetQ());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQ()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.q, typedOther.q);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetP()).compareTo(typedOther.isSetP());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetP()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.p, typedOther.p);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanSourceDetailReportByUid_args(");
      boolean first = true;

      sb.append("q:");
      if (this.q == null) {
        sb.append("null");
      } else {
        sb.append(this.q);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("p:");
      if (this.p == null) {
        sb.append("null");
      } else {
        sb.append(this.p);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanSourceDetailReportByUid_argsStandardSchemeFactory implements SchemeFactory {
      public PlanSourceDetailReportByUid_argsStandardScheme getScheme() {
        return new PlanSourceDetailReportByUid_argsStandardScheme();
      }
    }

    private static class PlanSourceDetailReportByUid_argsStandardScheme extends StandardScheme<PlanSourceDetailReportByUid_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanSourceDetailReportByUid_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // Q
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.q = new queryOptions();
                struct.q.read(iprot);
                struct.setQIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // P
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.p = new pageOptions();
                struct.p.read(iprot);
                struct.setPIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanSourceDetailReportByUid_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.q != null) {
          oprot.writeFieldBegin(Q_FIELD_DESC);
          struct.q.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.p != null) {
          oprot.writeFieldBegin(P_FIELD_DESC);
          struct.p.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanSourceDetailReportByUid_argsTupleSchemeFactory implements SchemeFactory {
      public PlanSourceDetailReportByUid_argsTupleScheme getScheme() {
        return new PlanSourceDetailReportByUid_argsTupleScheme();
      }
    }

    private static class PlanSourceDetailReportByUid_argsTupleScheme extends TupleScheme<PlanSourceDetailReportByUid_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanSourceDetailReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetQ()) {
          optionals.set(0);
        }
        if (struct.isSetP()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetQ()) {
          struct.q.write(oprot);
        }
        if (struct.isSetP()) {
          struct.p.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanSourceDetailReportByUid_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.q = new queryOptions();
          struct.q.read(iprot);
          struct.setQIsSet(true);
        }
        if (incoming.get(1)) {
          struct.p = new pageOptions();
          struct.p.read(iprot);
          struct.setPIsSet(true);
        }
      }
    }

  }

  public static class PlanSourceDetailReportByUid_result implements org.apache.thrift.TBase<PlanSourceDetailReportByUid_result, PlanSourceDetailReportByUid_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PlanSourceDetailReportByUid_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new PlanSourceDetailReportByUid_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new PlanSourceDetailReportByUid_resultTupleSchemeFactory());
    }

    public reportResult success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, reportResult.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PlanSourceDetailReportByUid_result.class, metaDataMap);
    }

    public PlanSourceDetailReportByUid_result() {
    }

    public PlanSourceDetailReportByUid_result(
      reportResult success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public PlanSourceDetailReportByUid_result(PlanSourceDetailReportByUid_result other) {
      if (other.isSetSuccess()) {
        this.success = new reportResult(other.success);
      }
    }

    public PlanSourceDetailReportByUid_result deepCopy() {
      return new PlanSourceDetailReportByUid_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public reportResult getSuccess() {
      return this.success;
    }

    public PlanSourceDetailReportByUid_result setSuccess(reportResult success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((reportResult)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof PlanSourceDetailReportByUid_result)
        return this.equals((PlanSourceDetailReportByUid_result)that);
      return false;
    }

    public boolean equals(PlanSourceDetailReportByUid_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(PlanSourceDetailReportByUid_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      PlanSourceDetailReportByUid_result typedOther = (PlanSourceDetailReportByUid_result)other;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(typedOther.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, typedOther.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("PlanSourceDetailReportByUid_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class PlanSourceDetailReportByUid_resultStandardSchemeFactory implements SchemeFactory {
      public PlanSourceDetailReportByUid_resultStandardScheme getScheme() {
        return new PlanSourceDetailReportByUid_resultStandardScheme();
      }
    }

    private static class PlanSourceDetailReportByUid_resultStandardScheme extends StandardScheme<PlanSourceDetailReportByUid_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, PlanSourceDetailReportByUid_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new reportResult();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, PlanSourceDetailReportByUid_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class PlanSourceDetailReportByUid_resultTupleSchemeFactory implements SchemeFactory {
      public PlanSourceDetailReportByUid_resultTupleScheme getScheme() {
        return new PlanSourceDetailReportByUid_resultTupleScheme();
      }
    }

    private static class PlanSourceDetailReportByUid_resultTupleScheme extends TupleScheme<PlanSourceDetailReportByUid_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, PlanSourceDetailReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, PlanSourceDetailReportByUid_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new reportResult();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class ping_args implements org.apache.thrift.TBase<ping_args, ping_args._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ping_args");

    private static final org.apache.thrift.protocol.TField IGNOREME_FIELD_DESC = new org.apache.thrift.protocol.TField("ignoreme", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new ping_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new ping_argsTupleSchemeFactory());
    }

    public int ignoreme; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      IGNOREME((short)1, "ignoreme");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // IGNOREME
            return IGNOREME;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __IGNOREME_ISSET_ID = 0;
    private BitSet __isset_bit_vector = new BitSet(1);
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.IGNOREME, new org.apache.thrift.meta_data.FieldMetaData("ignoreme", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ping_args.class, metaDataMap);
    }

    public ping_args() {
    }

    public ping_args(
      int ignoreme)
    {
      this();
      this.ignoreme = ignoreme;
      setIgnoremeIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public ping_args(ping_args other) {
      __isset_bit_vector.clear();
      __isset_bit_vector.or(other.__isset_bit_vector);
      this.ignoreme = other.ignoreme;
    }

    public ping_args deepCopy() {
      return new ping_args(this);
    }

    @Override
    public void clear() {
      setIgnoremeIsSet(false);
      this.ignoreme = 0;
    }

    public int getIgnoreme() {
      return this.ignoreme;
    }

    public ping_args setIgnoreme(int ignoreme) {
      this.ignoreme = ignoreme;
      setIgnoremeIsSet(true);
      return this;
    }

    public void unsetIgnoreme() {
      __isset_bit_vector.clear(__IGNOREME_ISSET_ID);
    }

    /** Returns true if field ignoreme is set (has been assigned a value) and false otherwise */
    public boolean isSetIgnoreme() {
      return __isset_bit_vector.get(__IGNOREME_ISSET_ID);
    }

    public void setIgnoremeIsSet(boolean value) {
      __isset_bit_vector.set(__IGNOREME_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case IGNOREME:
        if (value == null) {
          unsetIgnoreme();
        } else {
          setIgnoreme((Integer)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case IGNOREME:
        return Integer.valueOf(getIgnoreme());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case IGNOREME:
        return isSetIgnoreme();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof ping_args)
        return this.equals((ping_args)that);
      return false;
    }

    public boolean equals(ping_args that) {
      if (that == null)
        return false;

      boolean this_present_ignoreme = true;
      boolean that_present_ignoreme = true;
      if (this_present_ignoreme || that_present_ignoreme) {
        if (!(this_present_ignoreme && that_present_ignoreme))
          return false;
        if (this.ignoreme != that.ignoreme)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(ping_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      ping_args typedOther = (ping_args)other;

      lastComparison = Boolean.valueOf(isSetIgnoreme()).compareTo(typedOther.isSetIgnoreme());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIgnoreme()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ignoreme, typedOther.ignoreme);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("ping_args(");
      boolean first = true;

      sb.append("ignoreme:");
      sb.append(this.ignoreme);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bit_vector = new BitSet(1);
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class ping_argsStandardSchemeFactory implements SchemeFactory {
      public ping_argsStandardScheme getScheme() {
        return new ping_argsStandardScheme();
      }
    }

    private static class ping_argsStandardScheme extends StandardScheme<ping_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, ping_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // IGNOREME
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.ignoreme = iprot.readI32();
                struct.setIgnoremeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, ping_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(IGNOREME_FIELD_DESC);
        oprot.writeI32(struct.ignoreme);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class ping_argsTupleSchemeFactory implements SchemeFactory {
      public ping_argsTupleScheme getScheme() {
        return new ping_argsTupleScheme();
      }
    }

    private static class ping_argsTupleScheme extends TupleScheme<ping_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, ping_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetIgnoreme()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetIgnoreme()) {
          oprot.writeI32(struct.ignoreme);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, ping_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.ignoreme = iprot.readI32();
          struct.setIgnoremeIsSet(true);
        }
      }
    }

  }

  public static class ping_result implements org.apache.thrift.TBase<ping_result, ping_result._Fields>, java.io.Serializable, Cloneable   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ping_result");


    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new ping_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new ping_resultTupleSchemeFactory());
    }


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ping_result.class, metaDataMap);
    }

    public ping_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public ping_result(ping_result other) {
    }

    public ping_result deepCopy() {
      return new ping_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof ping_result)
        return this.equals((ping_result)that);
      return false;
    }

    public boolean equals(ping_result that) {
      if (that == null)
        return false;

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    public int compareTo(ping_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;
      ping_result typedOther = (ping_result)other;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("ping_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class ping_resultStandardSchemeFactory implements SchemeFactory {
      public ping_resultStandardScheme getScheme() {
        return new ping_resultStandardScheme();
      }
    }

    private static class ping_resultStandardScheme extends StandardScheme<ping_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, ping_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, ping_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class ping_resultTupleSchemeFactory implements SchemeFactory {
      public ping_resultTupleScheme getScheme() {
        return new ping_resultTupleScheme();
      }
    }

    private static class ping_resultTupleScheme extends TupleScheme<ping_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, ping_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, ping_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
      }
    }

  }

}
